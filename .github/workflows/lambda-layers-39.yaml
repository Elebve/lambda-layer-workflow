name: Deploy Layers python 3.9

on:
  push:

env:
  AWS_REGION: "us-east-1"
  LIBRARY_JSON: libraries39.json
  PYTHON_VERSION: "3.9"
  TFE_DIR: layers
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3

      - name: Set matrix data
        id: set-matrix
        run: echo "matrix=$(jq -c . < ./${{ env.LIBRARY_JSON }})" >> $GITHUB_OUTPUT

  create-zip:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
      - name: Check matrix values
        run: |
          echo ${{ matrix.name }}
          echo ${{ matrix.version }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Extract Name and Version
        run: |
          echo "REQUIREMENTS_NAME=${{ matrix.name }}" >> $GITHUB_ENV
          echo "LIBRARY_VERSION=${{ matrix.version }}" >> $GITHUB_ENV
          echo "ZIP_NAME=${{ matrix.name }}.zip" >> $GITHUB_ENV

      - name: Install Python Library and Zip
        run: |
          pip3 install --upgrade pip
          mkdir -p python/
          # Solo reemplaza la URL si REQUIREMENTS_NAME es python39-atria-base.txt
          if [ "${REQUIREMENTS_NAME}" = "python39-atria-base.txt" ]; then
            sed -i "s|git+https://github.com/Elebve/models-atria.git|git+https://${{ secrets.TOKEN_GITHUB }}@github.com/Elebve/models-atria.git|g" ${REQUIREMENTS_NAME}.txt
          fi
          pip3 install -r ${REQUIREMENTS_NAME}.txt -t python/
          zip -r $ZIP_NAME python/

      - name: Upload Library Zip
        uses: actions/upload-artifact@v3
        with: 
          name: layers-zip-39
          path: ${{ env.ZIP_NAME }}

  # deploy_lambda_layer:
  #   name: Deploy lambda layer
  #   needs: create-zip
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: layers-zip
  #         path: ${{ env.TFE_DIR }}
  
  # #     - name: Setup Terraform
  # #       uses: hashicorp/setup-terraform@v2
  # #       with:
  # #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  # #         terraform_version: '1.6.3'

  # #     - name: Deploy with Terraform
  # #       run: |
  # #         terraform init
  # #         terraform apply -auto-approve
  # #       working-directory: ${{ env.TFE_DIR }}
